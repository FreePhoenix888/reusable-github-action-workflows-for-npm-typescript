name: NPM Package Publish
'on':
  workflow_call:
    secrets:
      npm-token:
        required: true
    inputs:
      build-command:
        type: string
        required: false
        default: npm run build
      test-command:
        type: string
        required: false
        default: npm run test --if-present
      generate-documentation-command:
        required: false
        type: string
        default: npx --yes typedoc src/main.ts
        description: "The command that will be executed to generate documentation"
      should-generate-documentation:
        required: false
        type: boolean
        default: true
        description: "Flag to determine if documentation should be generated"
        
jobs:
  check-is-version-updated:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - id: check-is-version-updated
        uses: FreePhoenix888/is-npm-package-version-changed-github-action@0.0.6
      - run: 'echo ${{ steps.check-is-version-updated.outputs.is-version-changed }}'
    outputs:
      is-version-changed: '${{ steps.check-is-version-updated.outputs.is-version-changed }}'
  publish:
    runs-on: ubuntu-latest
    needs:
      - check-is-version-updated
    if: '${{ needs.check-is-version-updated.outputs.is-version-changed == ''true'' }}'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '${{env.NODEJS_VERSION}}'
      - run: npm i -g npm@latest
      - run: npm clean-install
      - run: '${{ inputs.build-command }}'
      - run: '${{ inputs.test-command }}'
      - uses: JS-DevTools/npm-publish@v1
        id: publish
        with:
          token: '${{ secrets.npm-token }}'
    outputs:
      new-version: '${{ steps.publish.outputs.version }}'
      
        
  create-release:
    runs-on: ubuntu-latest
    needs:
      - publish
    steps:
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          tag_name: '${{ needs.publish.outputs.new-version }}'
          release_name: 'Release ${{ needs.publish.outputs.new-version }}'
          body: '${{ needs.publish.outputs.new-version }}'
          draft: false
          prerelease: false
  generate-documentation:
    runs-on: ubuntu-latest
    needs:
      - publish
    if: ${{ inputs.should-generate-documentation }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '${{env.NODEJS_VERSION}}'
      - run: npm i -g npm@latest
      - run: npm clean-install
      - name: Generate Documentation
        id: generate-docs
        run: '${{ inputs.generate-documentation-command }}'
      - name: Deploy Documentation to Github Pages
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: docs
